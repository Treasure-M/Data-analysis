# -*- coding: utf-8 -*-
"""Data_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oG9iv8UngKd4km89_vBX1xVpq0eBg4ie
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Task 1: Load and Explore the Dataset
# Load Iris dataset from seaborn (you can replace this with pd.read_csv("your_file.csv"))
df = sns.load_dataset("iris")

# Display first few rows
print("🔍 First 5 rows:")
print(df.head())

# Check data types and missing values
print("\n📦 Data Types:")
print(df.dtypes)

print("\n❓ Missing Values:")
print(df.isnull().sum())

# Clean dataset (no missing values in Iris, but here's how you'd do it)
df_cleaned = df.dropna()

# Task 2: Basic Data Analysis
print("\n📊 Statistical Summary:")
print(df_cleaned.describe())

# Group by species and compute mean petal length
grouped = df_cleaned.groupby("species")["petal_length"].mean()
print("\n📈 Average Petal Length per Species:")
print(grouped)

# Task 3: Data Visualization

# Line chart (simulated time-series using index)
plt.figure(figsize=(8, 4))
plt.plot(df_cleaned.index, df_cleaned["sepal_length"], label="Sepal Length")
plt.title("Sepal Length Trend Over Index")
plt.xlabel("Index")
plt.ylabel("Sepal Length")
plt.legend()
plt.tight_layout()
plt.show()

# Bar chart: Average petal length per species
plt.figure(figsize=(6, 4))
grouped.plot(kind="bar", color="skyblue")
plt.title("Average Petal Length per Species")
plt.xlabel("Species")
plt.ylabel("Petal Length")
plt.tight_layout()
plt.show()

# Histogram: Distribution of sepal width
plt.figure(figsize=(6, 4))
plt.hist(df_cleaned["sepal_width"], bins=15, color="lightgreen", edgecolor="black")
plt.title("Distribution of Sepal Width")
plt.xlabel("Sepal Width")
plt.ylabel("Frequency")
plt.tight_layout()
plt.show()

# Scatter plot: Sepal length vs. petal length
plt.figure(figsize=(6, 4))
sns.scatterplot(x="sepal_length", y="petal_length", hue="species", data=df_cleaned)
plt.title("Sepal Length vs. Petal Length")
plt.xlabel("Sepal Length")
plt.ylabel("Petal Length")
plt.tight_layout()
plt.show()